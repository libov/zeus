      REAL FUNCTION F2QCDFINE(X)
 
      VECTOR F2V(161,161)
      VECTOR F2U(161,161)
      VECTOR F2D(161,161)
      VECTOR F2MP(161,161)
      VECTOR F2MM(161,161)
      VECTOR F2SC(161,161)
      VECTOR FL(161,161)

      VECTOR Q2PASS(1)   
      VECTOR IERR(1)
      VECTOR RESULT(1)
      VECTOR IWHAT(1)
      VECTOR SHIFT(1)

      VECTOR gjrfc(161,161)
      VECTOR gjrfb(161,161)

      S=101400
 
      if (IWHAT(1).eq.0) THEN
       Q2=Q2PASS(1)
      else
        Q2=X
        X=Q2PASS(1)
      endif
     
      IF (Q2.LT.0.39.OR.X.LT.1E-6) THEN
        F2QCDFINE=1.
        RESULT(1)=1.
        RETURN
      ENDIF

C     Calculate grid points

      DO I=0,159
        IF(I.LE.71)THEN
        Q2G1=10**(5.*I/120.)-0.7
        Q2G2=10**(5.*(I+1)/120.)-0.7
        ELSEIF(I.EQ.72)THEN
        Q2G1=10**(5.*I/120)-0.7
        Q2G2=10**(2.*(I-71)/88 +3.)
        ELSE
        Q2G1=10**(2.*(I-72)/88. +3.)
        Q2G2=10**(2.*(I-71)/88. +3.)
        ENDIF
C       Q2G1=10**(5.*I/120.)-0.7
C        Q2G2=10**(5.*(I+1)/120.)-0.7
        IF (Q2.GE.Q2G1.AND.Q2.LT.Q2G2) THEN
          IQ2L=I+1
          IQ2H=I+2
          TQ=(Q2-Q2G1)/(Q2G2-Q2G1)
        ENDIF
      ENDDO



      DO I=0,159
      IF(I.LE.79)THEN
        XG1=10**(6.*I/120.-6.)
        XG2=10**(6.*(I+1)/120.-6.)
      ELSEIF(I.EQ.80)THEN
      XG1=10**(6*I/120-6.)
      XG2=10**(2./80.*(I-79)-2.)
      ELSE
      XG1=10**(2./80.*(I-80)-2.)
      XG2=10**(2./80.*(I-79)-2.)
      ENDIF
C        XG1=10**(5D-2*I-6D0)
C        XG2=10**(5D-2*(I+1)-6D0)
        IF (X.GE.XG1.AND.X.LT.XG2) THEN
          IXL=I+1
          IXH=I+2
          TX=(X-XG1)/(XG2-XG1)
        ENDIF
      ENDDO
 
      if (ierr(1).eq.1) then
       F2H=(1-TX)*F2U(IXL,IQ2H)+TX*F2U(IXH,IQ2H)
       F2L=(1-TX)*F2U(IXL,IQ2L)+TX*F2U(IXH,IQ2L)
      elseif (ierr(1).eq.-1) then
       F2H=(1-TX)*F2d(IXL,IQ2H)+TX*F2d(IXH,IQ2H)
       F2L=(1-TX)*F2d(IXL,IQ2L)+TX*F2d(IXH,IQ2L)
      elseif (ierr(1).eq.2) then
       F2H=(1-TX)*F2mp(IXL,IQ2H)+TX*F2mp(IXH,IQ2H)
       F2L=(1-TX)*F2mp(IXL,IQ2L)+TX*F2mp(IXH,IQ2L)
      elseif (ierr(1).eq.-2) then
       F2H=(1-TX)*F2mm(IXL,IQ2H)+TX*F2mm(IXH,IQ2H)
       F2L=(1-TX)*F2mm(IXL,IQ2L)+TX*F2mm(IXH,IQ2L)
      elseif (ierr(1).eq.3) then
       F2H=(1-TX)*F2sc(IXL,IQ2H)+TX*F2sc(IXH,IQ2H)
       F2L=(1-TX)*F2sc(IXL,IQ2L)+TX*F2sc(IXH,IQ2L)
      elseif (ierr(1).eq.10) then
** reduced cross section
       FlH=(1-TX)*Fl(IXL,IQ2H)+TX*Fl(IXH,IQ2H)
       FlL=(1-TX)*Fl(IXL,IQ2L)+TX*Fl(IXH,IQ2L)
       F2H=(1-TX)*F2V(IXL,IQ2H)+TX*F2V(IXH,IQ2H)
       F2L=(1-TX)*F2V(IXL,IQ2L)+TX*F2V(IXH,IQ2L)
       Y=Q2/X/S
       If (Y.LT.1.0) then
        FAC=Y*Y/(1.+(1.-Y)**2)
        F2H=F2H-FAC*FLH
        F2L=F2L-FAC*FLL
       else
        F2H=0.
        F2L=0.
       endif
      elseif (ierr(1).eq.100) then
       F2H=(1-TX)*gjrFc(IXL,IQ2H)+TX*gjrfc(IXH,IQ2H)
       F2L=(1-TX)*gjrFc(IXL,IQ2L)+TX*gjrfc(IXH,IQ2L)
      elseif (ierr(1).eq.101) then
       F2H=(1-TX)*gjrFb(IXL,IQ2H)+TX*gjrfb(IXH,IQ2H)
       F2L=(1-TX)*gjrFb(IXL,IQ2L)+TX*gjrfb(IXH,IQ2L)
      else
       F2H=(1-TX)*F2V(IXL,IQ2H)+TX*F2V(IXH,IQ2H)
       F2L=(1-TX)*F2V(IXL,IQ2L)+TX*F2V(IXH,IQ2L)
      endif
      F2QCDFINE=(1-TQ)*F2L+TQ*F2H
      IF (F2QCDFINE.GT.0) THEN
        RESULT(1)=F2QCDFINE
      ELSE
        RESULT(1)=1E-4
      ENDIF
      F2QCDFINE=F2QCDFINE+SHIFT(1)

c      PRINT*,Q2,X,F2QCDFINE,IXL,IQ2L,F2V(IXL,IQ2L)

      RETURN 
      END


